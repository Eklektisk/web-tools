#!/bin/sh

while [ -z "$TITLE" ]; do
  printf 'Enter post title: '
  read TITLE
  echo
done

CLEAN_TITLE="$(echo "$TITLE" | sed 's/./\L&/g; \
s/[^a-z0-9 -]/_/g; \
s/ /_/g; \
s/_\+/_/g; \
s/^_\+//; \
s/_\+$//;')"

FILENAME="pages/posts/${CLEAN_TITLE}.html"

if [ -f "$FILENAME" ]; then
  printf "Post \"$TITLE\" already exists; overwrite it? [y/N] "
  read OVERWRITE
  echo

  case $OVERWRITE in
    [Yy]* ) ;;
    * ) exit 0 ;;
  esac
fi

printf 'Enter template name: '
read TEMPLATE
echo

if [ -z "$TEMPLATE" ]; then
  TEMPLATE="base"
  printf 'No template supplied, defaulting to "base"'
fi

[[ -f "templates/${TEMPLATE}_testing.html" ]]
  && printf "Could not find testing variant for \"$TEMPLATE\"" > &2

[[ -f "templates/${TEMPLATE}_production.html" ]]
  && printf "Could not find production variant for \"$TEMPLATE\"" > &2

echo "<!-- $TEMPLATE -->" > "$FILENAME"
echo "<h2>$(./encode_text "$TITLE")</h2>" >> "$FILENAME"

printf "Post \"$TITLE\" created, edit post? [Y/n] "
read EDIT_CONFIRM
echo

case $EDIT_CONFIRM in
  [Nn]* ) exit 0 ;;
  * )
    if [ -z "$EDITOR" ]; then
      [ -z "$VISUAL" ] && EDITOR='vim' || EDITOR="$VISUAL"
    fi

    exec $EDITOR "$FILENAME" -c '$'
    ;;

esac

